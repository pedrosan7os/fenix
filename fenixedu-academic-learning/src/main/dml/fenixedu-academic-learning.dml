package org.fenixedu.academic.domain;

class Course {
}

    class Attendance  {
    }

    relation AttendsAttendance {
        public Attends playsRole sourceAttends {
            multiplicity 1..1;
        }
        public Attendance playsRole attendance {
            multiplicity 1..1;
        }
    }

class BibliographicReference  {
    String authors;
    Boolean optional;
    String reference;
    Integer referenceOrder;
    String title;
    String year;
}

class EvaluationMethod  {
    MultiLanguageString evaluationElements;
}

class LessonPlanning  {
    ShiftType lessonType;
    Integer orderOfPlanning;
    MultiLanguageString planning;
    MultiLanguageString title;
}

class Summary  {
    Boolean isExtraLesson;
    DateTime lastModifiedDateDateTime;
    Integer studentsNumber;
    YearMonthDay summaryDateYearMonthDay;
    HourMinuteSecond summaryHourHourMinuteSecond;
    MultiLanguageString summaryText;
    ShiftType summaryType;
    String teacherName;
    MultiLanguageString title;    
    Boolean taught;
}

    class Evaluation  {
        String publishmentMessage;
        GradeScale gradeScale;
    }

        class FinalEvaluation extends Evaluation {
        }

        class AdHocEvaluation extends Evaluation {
            String description;
            String name;
            DateTime creationDateTime;
        }

        class Project extends Evaluation {
            String description;
            Integer maxSubmissionsToKeep;
            String name;
            Boolean onlineSubmissionsAllowed;
            DateTime projectBeginDateTime;
            DateTime projectEndDateTime;
        }

        class WrittenEvaluation extends Evaluation {
            HourMinuteSecond beginningDateHourMinuteSecond (REQUIRED);
            YearMonthDay dayDateYearMonthDay (REQUIRED);
            HourMinuteSecond endDateHourMinuteSecond;
            YearMonthDay enrollmentBeginDayDateYearMonthDay;
            HourMinuteSecond enrollmentBeginTimeDateHourMinuteSecond;
            YearMonthDay enrollmentEndDayDateYearMonthDay;
            HourMinuteSecond enrollmentEndTimeDateHourMinuteSecond;
        }

            class Exam extends WrittenEvaluation {
                Season season;
            }

            class WrittenTest extends WrittenEvaluation {
                String description;
                DateTime requestRoomSentDate;
            }

    class ExecutionCourseLog extends DomainOperationLog {
    }
        class ContentManagementLog extends ExecutionCourseLog {
        }
        class ProfessorshipManagementLog extends ExecutionCourseLog {
        }  
        class CurricularManagementLog extends ExecutionCourseLog {
        }
        class GroupsAndShiftsManagementLog extends ExecutionCourseLog {
        }
        class EvaluationManagementLog extends ExecutionCourseLog {
        }

    class CourseLoad  {
        ShiftType type;
        BigDecimal totalQuantity;
        BigDecimal unitQuantity;    
    }

    class ExportGrouping  {
        ProposalState proposalState;
    }

        class ProjectSubmissionFile extends .org.fenixedu.bennu.io.domain.GenericFile {
        }

    class Grouping  {
        DateTime enrolmentBeginDayDateDateTime;
        DateTime enrolmentEndDayDateDateTime;
        EnrolmentGroupPolicyType enrolmentPolicy;
        Integer groupMaximumNumber;
        Integer idealCapacity;
        Integer maximumCapacity;
        Integer minimumCapacity;
        String name;
        String projectDescription;
        ShiftType shiftType;
        Boolean automaticEnrolment;
        Boolean differentiatedCapacity;
    }

    class Mark  {
        String mark;
        String publishedMark;
    }

        class FinalMark extends Mark {
            Integer gradeListVersion;
            YearMonthDay submitDateYearMonthDay;
            String submitedMark;
            YearMonthDay whenSubmitedYearMonthDay;
        }
        
    class CourseTeacher  {
        Boolean responsibleFor;
    }

    relation ProfessorshipCourseTeacher {
        public Professorship playsRole sourceProfessorship {
            multiplicity 1..1;
        }
        public CourseTeacher playsRole courseTeacher {
            multiplicity 1..1;
        }
    }

    class ProjectSubmission  {
        DateTime submissionDateTime;
        String teacherObservation;
    }

    class ProjectSubmissionLog  {
        String fileChecksum;
        String fileChecksumAlgorithm;
        String fileMimeType;
        Integer fileSize;
        String filename;
        DateTime submissionDateTime;
    }

    class ShiftGroupingProperties  {
        Integer capacity;
    }

    class StudentGroup  {
        Integer groupNumber;
        Boolean valid;
    }

    class WrittenEvaluationEnrolment  {
    }

            class space.EventSpaceOccupation extends space.SpaceOccupation {                
            }

                class space.LessonSpaceOccupation extends space.EventSpaceOccupation {
                }

                class space.LessonInstanceSpaceOccupation extends space.EventSpaceOccupation {          
                }
                
                class space.WrittenEvaluationSpaceOccupation extends space.EventSpaceOccupation {
                }
                
                
    class messaging.ConversationMessage {
        DateTime creationDate;
        MultiLanguageString body;
    }

    class messaging.ConversationThread {
        DateTime creationDate;
        MultiLanguageString title;
    }

    class messaging.Forum {
        DateTime creationDate;
        MultiLanguageString name;
        MultiLanguageString description;
    }

    class messaging.ForumSubscription  {
        Boolean favorite;
        Boolean receivePostsByEmail;
    }

        class messaging.ExecutionCourseForum extends messaging.Forum {
        }
        class messaging.DepartmentForum extends messaging.Forum {
        }


relation ExecutionCourseCourse {
    public ExecutionCourse playsRole sourceExecutionCourse {
        multiplicity 1..1;
    }
    public Course playsRole course {
        multiplicity 1..1;
    }
}

relation ExecutionCourseBibliographicReference {
    BibliographicReference playsRole associatedBibliographicReferences {
        multiplicity *;
    }
    Course playsRole executionCourse;
}

relation RootDomainObjectBibliographicReference {
    .org.fenixedu.bennu.core.domain.Bennu playsRole rootDomainObject;
    BibliographicReference playsRole bibliographicReferences {
        multiplicity *;
    }
}

relation ExecutionCourseEvaluationMethod {
    EvaluationMethod playsRole evaluationMethod;
    Course playsRole executionCourse;
}

relation RootDomainObjectEvaluationMethod {
    .org.fenixedu.bennu.core.domain.Bennu playsRole rootDomainObject;
    EvaluationMethod playsRole evaluationMethods {
        multiplicity *;
    }
}

relation LessonPlanningExecutionCourse {
    Course playsRole executionCourse;
    LessonPlanning playsRole lessonPlannings {
        multiplicity *;
    }
}

relation RootDomainObjectLessonPlanning {
    .org.fenixedu.bennu.core.domain.Bennu playsRole rootDomainObject;
    LessonPlanning playsRole lessonPlannings {
        multiplicity *;
    }
}

relation ExecutionCourseSummary {
    Summary playsRole associatedSummaries {
        multiplicity *;
    }
    Course playsRole executionCourse;
}

relation ProfessorshipSummary {
    Summary playsRole associatedSummaries {
        multiplicity *;
    }
    CourseTeacher playsRole professorship;
}

relation RoomSummary {
    Summary playsRole associatedSummaries {
        multiplicity *;
    }
    .org.fenixedu.spaces.domain.Space playsRole room;
}

relation RootDomainObjectSummary {
    .org.fenixedu.bennu.core.domain.Bennu playsRole rootDomainObject;
    Summary playsRole summarys {
        multiplicity *;
    }
}

relation ShiftSummary {
    Summary playsRole associatedSummaries {
        multiplicity *;
    }
    Shift playsRole shift;
}

relation SummaryLessonInstance {
    Summary playsRole summary;
    LessonInstance playsRole lessonInstance;
}

relation ExecutionCourseExecutionCourseLog {
    Course playsRole executionCourse{
        multiplicity 1..1;
    }
    ExecutionCourseLog playsRole executionCourseLogs {
        multiplicity*;
    }
}

relation AnswerExportProposal {
    ExportGrouping playsRole exportGroupingReceivers {
        multiplicity *;
    }
    Person playsRole receiverPerson;
}

relation AttendsWeeklyWorkLoad {
    Attendance playsRole attends;
    student.WeeklyWorkLoad playsRole weeklyWorkLoads {
        multiplicity *;
    }
}

relation BelongsTo {
    ExportGrouping playsRole exportGroupings {
        multiplicity *;
    }
    Grouping playsRole grouping;
}

relation EvaluationExecutionCourse {
    Course playsRole associatedExecutionCourses {
        multiplicity *;
    }
    Evaluation playsRole associatedEvaluations {
        multiplicity *;
    }
}

relation CourseAttendance {
    Course playsRole disciplinaExecucao;
    Attendance playsRole attends {
        multiplicity *;
    }
}

relation ExecutionCourseSender {
    Course playsRole course;
    util.email.ExecutionCourseSender playsRole sender;
}

relation CourseCourseTeacher {
    Course playsRole executionCourse {
        multiplicity 1..1;
    }
    CourseTeacher playsRole professorships {
        multiplicity *;
    }
}

relation ExecutionCourseForumCourse {
    messaging.ExecutionCourseForum playsRole forum {
        multiplicity *;
    }
    Course playsRole executionCourse;
}

relation DepartmentForumDepartment {
    messaging.DepartmentForum playsRole forum;
    Department playsRole department;
}

relation ForumSubscriptionForum {
    messaging.ForumSubscription playsRole forumSubscriptions {
        multiplicity *;
    }
    messaging.Forum playsRole forum;
}

relation ForumSubscriptionPerson {
    messaging.ForumSubscription playsRole forumSubscriptions {
        multiplicity *;
    }
    Person playsRole person;
}

relation ForumConversationThreads {
    public messaging.Forum playsRole forum;
    public messaging.ConversationThread playsRole conversationThread {
        multiplicity *;
    }
}

relation ConversationThreadHasMessages {
    public messaging.ConversationThread playsRole conversationThread;
    public messaging.ConversationMessage playsRole message {
        multiplicity *;
    }
}

relation ConversationMessageCreator {
    public Person playsRole creator;
    public messaging.ConversationMessage playsRole conversationMessage {
        multiplicity *;
    }
}

relation ConversationThreadCreator {
    public Person playsRole creator;
    public messaging.ConversationThread playsRole conversationThread {
        multiplicity *;
    }
}

relation ForumCreator {
    public Person playsRole creator;
    public messaging.Forum playsRole forum {
        multiplicity *;
    }
}

relation GoalExecutionCourse {
    ExportGrouping playsRole exportGroupings {
        multiplicity *;
    }
    Course playsRole executionCourse;
}

relation GroupingAttends {
    Attendance playsRole attends {
        multiplicity *;
    }
    Grouping playsRole groupings {
        multiplicity *;
    }
}

relation LessonLessonSpaceOccupation {
    Lesson playsRole lesson;
    space.LessonSpaceOccupation playsRole lessonSpaceOccupation;
}

relation MakeExportProposal {
    ExportGrouping playsRole exportGroupingSenders {
        multiplicity *;
    }
    Person playsRole senderPerson;
}

relation MarkAttends {
    Mark playsRole associatedMarks {
        multiplicity *;
    }
    Attendance playsRole attend;
}

relation MarkEvaluation {
    Mark playsRole marks {
        multiplicity *;
    }
    Evaluation playsRole evaluation;
}

relation ProjectGrouping {
    Grouping playsRole grouping;
    Project playsRole projects {
        multiplicity *;
    }
}

relation ProjectsDeparments {
    Project playsRole projects {
        multiplicity *;
    }
    Department playsRole deparments {
        multiplicity *;
    }
}

relation ProjectSubmissionAttends {
    Attendance playsRole attends;
    ProjectSubmission playsRole projectSubmissions {
        multiplicity *;
    }
}

relation ProjectSubmissionFileProjectSubmission {
    ProjectSubmission playsRole projectSubmission;
    ProjectSubmissionFile playsRole projectSubmissionFile {
        multiplicity 1..1;
    }
}

relation ProjectSubmissionLogAttends {
    Attendance playsRole attends;
    ProjectSubmissionLog playsRole projectSubmissionLogs {
        multiplicity *;
    }
}

relation ProjectSubmissionLogProject {
    Project playsRole project;
    ProjectSubmissionLog playsRole projectSubmissionLogs {
        multiplicity *;
    }
}

relation ProjectSubmissionLogStudentGroup {
    StudentGroup playsRole studentGroup;
    ProjectSubmissionLog playsRole projectSubmissionLogs {
        multiplicity *;
    }
}

relation ProjectSubmissionProject {
    Project playsRole project;
    ProjectSubmission playsRole projectSubmissions {
        multiplicity *;
    }
}

relation ProjectSubmissionStudentGroup {
    StudentGroup playsRole studentGroup;
    ProjectSubmission playsRole projectSubmissions {
        multiplicity *;
    }
}

relation RootDomainObjectAttendance {
    .org.fenixedu.bennu.core.domain.Bennu playsRole rootDomainObject;
    Attendance playsRole attendance {
        multiplicity *;
    }
}

relation RootDomainObjectEvaluation {
    .org.fenixedu.bennu.core.domain.Bennu playsRole rootDomainObject;
    Evaluation playsRole evaluations {
        multiplicity *;
    }
}

relation RootDomainObjectCourse {
    .org.fenixedu.bennu.core.domain.Bennu playsRole rootDomainObject;
    Course playsRole course {
        multiplicity *;
    }
}

relation RootDomainObjectExportGrouping {
    .org.fenixedu.bennu.core.domain.Bennu playsRole rootDomainObject;
    ExportGrouping playsRole exportGroupings {
        multiplicity *;
    }
}

relation RootDomainObjectForumSubscription {
    .org.fenixedu.bennu.core.domain.Bennu playsRole rootDomainObject;
    messaging.ForumSubscription playsRole forumSubscriptions {
        multiplicity *;
    }
}

relation RootDomainObjectGrouping {
    .org.fenixedu.bennu.core.domain.Bennu playsRole rootDomainObject;
    Grouping playsRole groupings {
        multiplicity *;
    }
}

relation RootDomainObjectMark {
    .org.fenixedu.bennu.core.domain.Bennu playsRole rootDomainObject;
    Mark playsRole marks {
        multiplicity *;
    }
}

relation RootDomainObjectCourseTeacher {
    .org.fenixedu.bennu.core.domain.Bennu playsRole rootDomainObject;
    CourseTeacher playsRole courseTeacher {
        multiplicity *;
    }
}

relation RootDomainObjectProjectSubmission {
    .org.fenixedu.bennu.core.domain.Bennu playsRole rootDomainObject;
    ProjectSubmission playsRole projectSubmissions {
        multiplicity *;
    }
}

relation RootDomainObjectProjectSubmissionLog {
    .org.fenixedu.bennu.core.domain.Bennu playsRole rootDomainObject;
    ProjectSubmissionLog playsRole projectSubmissionLogs {
        multiplicity *;
    }
}

relation RootDomainObjectShiftGroupingProperties {
    .org.fenixedu.bennu.core.domain.Bennu playsRole rootDomainObject;
    ShiftGroupingProperties playsRole shiftGroupingProperties {
        multiplicity *;
    }
}

relation RootDomainObjectStudentGroup {
    .org.fenixedu.bennu.core.domain.Bennu playsRole rootDomainObject;
    StudentGroup playsRole studentGroups {
        multiplicity *;
    }
}

relation RootDomainObjectWrittenEvaluationEnrolment {
    .org.fenixedu.bennu.core.domain.Bennu playsRole rootDomainObject;
    WrittenEvaluationEnrolment playsRole writtenEvaluationEnrolments {
        multiplicity *;
    }
}

relation SendProposal {
    ExportGrouping playsRole groupingSenderExecutionCourse {
        multiplicity *;
    }
    Course playsRole senderExecutionCourse;
}

relation ShiftEnrolmentAttends {
    Attendance playsRole attends;
    ShiftEnrolment playsRole shiftEnrolments {
        multiplicity *;
    }
}

relation ShiftGroupingPropertiesShift {
    Shift playsRole shift;
    ShiftGroupingProperties playsRole shiftGroupingProperties;
}

relation ShiftGroupingPropertiesGrouping {
    Grouping playsRole grouping;
    ShiftGroupingProperties playsRole shiftGroupingProperties {
        multiplicity *;
    }
}

relation ShiftAttends {
    Shift playsRole shifts {
        multiplicity *;
    }
    Attendance playsRole attends {
        multiplicity *;
    }
}

relation StudentGroup {
    StudentGroup playsRole associatedStudentGroups {
        multiplicity *;
    }
    Shift playsRole shift;
}

relation StudentGroupAttend {
    Attendance playsRole attends {
        multiplicity *;
    }
    StudentGroup playsRole studentGroups {
        multiplicity *;
    }
}

relation StudentGroupBelongsToGrouping {
    StudentGroup playsRole studentGroups {
        multiplicity *;
    }
    Grouping playsRole grouping;
}

relation UserCourseTeacher {
    CourseTeacher playsRole courseTeacher {
        multiplicity *;
    }
    .org.fenixedu.bennu.core.domain.User playsRole user;
}

relation WrittenEvaluationContext {
    WrittenEvaluation playsRole associatedWrittenEvaluations {
        multiplicity *;
    }
    degreeStructure.Context playsRole associatedContexts {
        multiplicity *;
    }
}

relation WrittenEvaluationCurricularCourseScope {
    WrittenEvaluation playsRole associatedWrittenEvaluations {
        multiplicity *;
    }
    CurricularCourseScope playsRole associatedCurricularCourseScope {
        multiplicity *;
    }
}

relation WrittenEvaluationEnrolmentExam {
    WrittenEvaluationEnrolment playsRole writtenEvaluationEnrolments {
        multiplicity *;
    }
    WrittenEvaluation playsRole writtenEvaluation;
}

relation WrittenEvaluationEnrolmentRoom {
    WrittenEvaluationEnrolment playsRole writtenEvaluationEnrolments {
        multiplicity *;
    }
    .org.fenixedu.spaces.domain.Space playsRole room;
}

relation WrittenEvaluationEnrolmentStudent {
    WrittenEvaluationEnrolment playsRole writtenEvaluationEnrolments {
        multiplicity *;
    }
    student.Registration playsRole student;
}

relation WrittenEvaluationWrittenEvaluationSpaceOccupation {
    WrittenEvaluation playsRole writtenEvaluations {
        multiplicity *;
    }
    space.WrittenEvaluationSpaceOccupation playsRole writtenEvaluationSpaceOccupations {
        multiplicity *;
    }
}

relation LessonInstanceLessonInstanceSpaceOccupations {
    LessonInstance playsRole lessonInstances {
        multiplicity *;
    }
    space.LessonInstanceSpaceOccupation playsRole lessonInstanceSpaceOccupation;
}

relation CourseLoadRootDomainObject {
    .org.fenixedu.bennu.core.domain.Bennu playsRole rootDomainObject;
    CourseLoad playsRole courseLoads {
        multiplicity *;
    }
}

relation CourseLoadExecutionCourse {
    Course playsRole executionCourse;
    CourseLoad playsRole courseLoads {
        multiplicity *;
    }
}

relation CourseLoadShift {
    Shift playsRole shifts {
        multiplicity *;
    }
    CourseLoad playsRole courseLoads {
        multiplicity *;
    }
}

relation CourseLoadLessonInstance {
    CourseLoad playsRole courseLoad;
    LessonInstance playsRole lessonInstances {
        multiplicity *;
    }
}

relation ProfessorshipPremissionsProfessorship {
    CourseTeacher playsRole professorship;
    ProfessorshipPermissions playsRole permissions;
}

relation PersistentGroupingGroupGrouping {
    public accessControl.PersistentGroupingGroup playsRole groupingGroup {
        multiplicity 0..1;
    }
    public Grouping playsRole grouping {
        multiplicity 1..1;
    }
}

relation StudentGroupStudentGroupGroup {
    public accessControl.PersistentStudentGroupGroup playsRole studentGroupGroup {
        multiplicity 0..1;
    }
    public StudentGroup playsRole studentGroup {
        multiplicity 1..1;
    }
}

relation PersistentProjectDepartmentGroupProject {
    public accessControl.PersistentProjectDepartmentGroup playsRole projectDepartmentGroup {
        multiplicity 0..1;
    }
    public Project playsRole project {
        multiplicity 1..1;
    }
}

